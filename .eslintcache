[{"D:\\ProjectCode\\React\\react-typescript-template\\src\\reportWebVitals.ts":"1","D:\\ProjectCode\\React\\react-typescript-template\\src\\utils\\i18n\\index.tsx":"2","D:\\ProjectCode\\React\\react-typescript-template\\src\\views\\login\\IndexCont.tsx":"3","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\leftMenu.tsx":"4","D:\\ProjectCode\\React\\react-typescript-template\\src\\utils\\mock\\Index.tsx":"5","D:\\ProjectCode\\React\\react-typescript-template\\src\\views\\login\\Index.tsx":"6","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actions\\leftMenu.tsx":"7","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\store.tsx":"8","D:\\ProjectCode\\React\\react-typescript-template\\src\\layouts\\Layout.tsx":"9","D:\\ProjectCode\\React\\react-typescript-template\\src\\layouts\\LeftNavigation.tsx":"10","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actionType.tsx":"11","D:\\ProjectCode\\React\\react-typescript-template\\src\\index.tsx":"12","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\setting.tsx":"13","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actions\\setting.tsx":"14","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\rootReducer.tsx":"15","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\loginReducer.tsx":"16","D:\\ProjectCode\\React\\react-typescript-template\\src\\config.tsx":"17"},{"size":440,"mtime":1610110792067,"results":"18","hashOfConfig":"19"},{"size":340,"mtime":1611927794055,"results":"20","hashOfConfig":"19"},{"size":2000,"mtime":1611752009464,"results":"21","hashOfConfig":"19"},{"size":709,"mtime":1610110792066,"results":"22","hashOfConfig":"19"},{"size":3404,"mtime":1610110792068,"results":"23","hashOfConfig":"19"},{"size":2516,"mtime":1611661582308,"results":"24","hashOfConfig":"19"},{"size":288,"mtime":1610110792055,"results":"25","hashOfConfig":"19"},{"size":225,"mtime":1610110792067,"results":"26","hashOfConfig":"19"},{"size":4234,"mtime":1611992544745,"results":"27","hashOfConfig":"19"},{"size":2354,"mtime":1610187316482,"results":"28","hashOfConfig":"19"},{"size":668,"mtime":1611752009460,"results":"29","hashOfConfig":"19"},{"size":1144,"mtime":1611924701876,"results":"30","hashOfConfig":"19"},{"size":566,"mtime":1611927965767,"results":"31","hashOfConfig":"19"},{"size":206,"mtime":1611927404744,"results":"32","hashOfConfig":"19"},{"size":933,"mtime":1611836569994,"results":"33","hashOfConfig":"19"},{"size":791,"mtime":1610110792066,"results":"34","hashOfConfig":"19"},{"size":50,"mtime":1610110792026,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"wm354b",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ProjectCode\\React\\react-typescript-template\\src\\reportWebVitals.ts",[],["75","76"],"D:\\ProjectCode\\React\\react-typescript-template\\src\\utils\\i18n\\index.tsx",["77"],"import React from \"react\"\r\nimport enUS from 'antd/lib/locale/en_US';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport 'moment/locale/zh-cn';\r\n\r\nexport const getAntdLocale = (localeString:string) =>{\r\n    switch(localeString){\r\n        case \"zh-cn\": return zhCN;\r\n        case \"en-us\": return enUS;\r\n        default: return zhCN;\r\n    }\r\n}",["78","79"],"D:\\ProjectCode\\React\\react-typescript-template\\src\\views\\login\\IndexCont.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\leftMenu.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\utils\\mock\\Index.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\views\\login\\Index.tsx",["80","81","82","83","84","85"],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actions\\leftMenu.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\store.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\layouts\\Layout.tsx",["86","87","88","89","90","91"],"D:\\ProjectCode\\React\\react-typescript-template\\src\\layouts\\LeftNavigation.tsx",["92","93","94","95","96"],"import React from 'react';\r\nimport {Layout,Button,Menu} from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionType from \"../redux/actionType\";\r\nimport { ReducerType } from \"../redux/rootReducer\";\r\nimport { leftMenu } from \"../redux/reducers/leftMenu\";\r\nimport { host } from \"../config\";\r\nimport Axios from \"axios\";\r\nimport { getMeunData } from \"../redux/actions/leftMenu\";\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nconst LeftNavigation = (e:IProp) =>{\r\n    const {SubMenu} = Menu\r\n    window.console.log(e);\r\n    if(e.leftMenuData.length === 0){\r\n        e.getMenuData();\r\n    }\r\n    return (\r\n        <>\r\n            <Menu\r\n                style={{ width: '100%' }}\r\n                defaultOpenKeys={['sub1']}\r\n                mode=\"inline\"\r\n            >\r\n                {\r\n                    e.leftMenuData.map(titleItem => {\r\n                        return(\r\n                            <>\r\n                                <SubMenu key = {titleItem.key} title = {titleItem.value} icon={<MailOutlined />}>\r\n                                    {titleItem.items?.map(item => {\r\n                                        return(\r\n                                            <>\r\n                                                <Menu.Item key = {item.key}>{item.value}</Menu.Item>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n                                </SubMenu>\r\n                                \r\n                            </>\r\n                            \r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state:ReducerType) => {\r\n    return{\r\n        leftMenuData: state.leftMeunReducer.leftInfo.leftMenuData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any,ownProps:any) =>{\r\n    return{\r\n        getMenuData:async () => {\r\n            var ref = await Axios.get(`${host}/menu/data`)\r\n            if(ref.status === 200){\r\n                dispatch(getMeunData(ref.data.data))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IProp{\r\n    getMenuData: () => void;\r\n    leftMenuData: leftMenu[];\r\n    children:any;\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LeftNavigation);\r\n","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actionType.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\index.tsx",["97","98"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ConfigProvider} from 'antd';\r\nimport {Provider} from 'react-redux';\r\nimport './index.css';\r\nimport {store} from \"./redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport App from \"./router/Index\";\r\nimport { ReducerType } from \"./redux/rootReducer\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {getAntdLocale} from \"./utils/i18n/index\";\r\nimport 'antd/dist/antd.less';\r\nimport moment from 'moment';\r\n\r\nimport Mock from \"mockjs\";//使用接口时需要注释此引用\r\nconst Page = connect((e:ReducerType)=>{return{locale:e.settingReducer.settingInfo.locale}})((e:any) =>{\r\n  return (\r\n    <ConfigProvider locale = {getAntdLocale(e.locale)}>\r\n      <App></App>\r\n    </ConfigProvider>\r\n  )\r\n})\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Page/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\setting.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\actions\\setting.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\rootReducer.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\redux\\reducers\\loginReducer.tsx",[],"D:\\ProjectCode\\React\\react-typescript-template\\src\\config.tsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":2,"column":41,"nodeType":"105","messageId":"106","endLine":2,"endColumn":48},{"ruleId":"103","severity":1,"message":"110","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"111","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":13},{"ruleId":"103","severity":1,"message":"112","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":52,"column":21,"nodeType":"115","endLine":52,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":61,"column":24,"nodeType":"115","endLine":61,"endColumn":35},{"ruleId":"103","severity":1,"message":"116","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":22},{"ruleId":"103","severity":1,"message":"117","line":4,"column":13,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"103","severity":1,"message":"112","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":14},{"ruleId":"103","severity":1,"message":"111","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":38,"column":21,"nodeType":"115","endLine":38,"endColumn":68},{"ruleId":"119","severity":1,"message":"120","line":53,"column":21,"nodeType":"115","endLine":53,"endColumn":53},{"ruleId":"103","severity":1,"message":"121","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"116","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":22},{"ruleId":"103","severity":1,"message":"117","line":4,"column":13,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"103","severity":1,"message":"122","line":10,"column":24,"nodeType":"105","messageId":"106","endLine":10,"endColumn":40},{"ruleId":"103","severity":1,"message":"123","line":10,"column":42,"nodeType":"105","messageId":"106","endLine":10,"endColumn":57},{"ruleId":"103","severity":1,"message":"124","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":14},{"ruleId":"103","severity":1,"message":"125","line":15,"column":8,"nodeType":"105","messageId":"106","endLine":15,"endColumn":12},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["126"],["127"],"'message' is defined but never used.","'PickerButton' is defined but never used.","'Axios' is defined but never used.","'host' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'ActionType' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Layout' is defined but never used.","'AppstoreOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'moment' is defined but never used.","'Mock' is defined but never used.","no-global-assign","no-unsafe-negation"]