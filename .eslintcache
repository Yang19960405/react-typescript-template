[{"D:\\02.项目文档\\ReactTest\\danfoss\\src\\reportWebVitals.ts":"1","D:\\02.项目文档\\ReactTest\\danfoss\\src\\views\\login\\IndexCont.tsx":"2","D:\\02.项目文档\\ReactTest\\danfoss\\src\\views\\login\\Index.tsx":"3","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\userReducer.tsx":"4","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\loginReducer.tsx":"5"},{"size":425,"mtime":1609308056016,"results":"6","hashOfConfig":"7"},{"size":2060,"mtime":1611567705064,"results":"8","hashOfConfig":"7"},{"size":2441,"mtime":1611558430294,"results":"9","hashOfConfig":"7"},{"size":457,"mtime":1609752988070,"results":"10","hashOfConfig":"7"},{"size":791,"mtime":1609987534724,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rex34z",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\02.项目文档\\ReactTest\\danfoss\\src\\reportWebVitals.ts",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\views\\login\\IndexCont.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\views\\login\\Index.tsx",["23","24","25","26","27","28"],"import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport \"./Login.less\";\r\nimport { ILogin } from \"./IndexCont\";\r\nimport PickerButton from \"antd/lib/date-picker/PickerButton\";\r\nimport Axios from 'axios';\r\nimport { host } from \"../../config\";\r\n\r\nconst LoginView = (e:ILogin) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    return(\r\n        <>\r\n            <div className = \"login-body\">\r\n                \r\n                <Form\r\n                    form = {form}\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    onFinish = {values => {\r\n                        e.loginSubmit(values.username,values.password);\r\n                    }}\r\n                >\r\n                    <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                    >\r\n                    <Input \r\n                        prefix={<UserOutlined className=\"site-form-item-icon\" />} \r\n                        placeholder=\"Username\" \r\n                    />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                    >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n            \r\n                    <a className=\"login-form-forgot\" href=\"\">\r\n                        Forgot password\r\n                    </a>\r\n                    </Form.Item>\r\n            \r\n                    <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    Or <a href=\"\">register now!</a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginView","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\userReducer.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\loginReducer.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":41,"nodeType":"31","messageId":"32","endLine":2,"endColumn":48},{"ruleId":"29","severity":1,"message":"33","line":6,"column":8,"nodeType":"31","messageId":"32","endLine":6,"endColumn":20},{"ruleId":"29","severity":1,"message":"34","line":7,"column":8,"nodeType":"31","messageId":"32","endLine":7,"endColumn":13},{"ruleId":"29","severity":1,"message":"35","line":8,"column":10,"nodeType":"31","messageId":"32","endLine":8,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":50,"column":21,"nodeType":"38","endLine":50,"endColumn":62},{"ruleId":"36","severity":1,"message":"37","line":59,"column":24,"nodeType":"38","endLine":59,"endColumn":35},"@typescript-eslint/no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","'PickerButton' is defined but never used.","'Axios' is defined but never used.","'host' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]