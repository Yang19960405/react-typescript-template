[{"D:\\02.项目文档\\ReactTest\\danfoss\\src\\reportWebVitals.ts":"1","D:\\02.项目文档\\ReactTest\\danfoss\\src\\layouts\\LeftNavigation.tsx":"2","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\rootReducer.tsx":"3","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\userReducer.tsx":"4","D:\\02.项目文档\\ReactTest\\danfoss\\src\\index.tsx":"5","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\actionType.tsx":"6","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\loginReducer.tsx":"7","D:\\02.项目文档\\ReactTest\\danfoss\\src\\components\\Login\\Login.tsx":"8","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\store.tsx":"9","D:\\02.项目文档\\ReactTest\\danfoss\\src\\containers\\Login\\Login.tsx":"10","D:\\02.项目文档\\ReactTest\\danfoss\\src\\config.tsx":"11","D:\\02.项目文档\\ReactTest\\danfoss\\src\\utils\\mock\\Index.tsx":"12"},{"size":425,"mtime":1609308056016,"results":"13","hashOfConfig":"14"},{"size":1015,"mtime":1609749858456,"results":"15","hashOfConfig":"14"},{"size":486,"mtime":1609752983900,"results":"16","hashOfConfig":"14"},{"size":457,"mtime":1609752988070,"results":"17","hashOfConfig":"14"},{"size":829,"mtime":1609839692606,"results":"18","hashOfConfig":"14"},{"size":462,"mtime":1609840083187,"results":"19","hashOfConfig":"14"},{"size":791,"mtime":1609987534724,"results":"20","hashOfConfig":"14"},{"size":3019,"mtime":1609989407210,"results":"21","hashOfConfig":"14"},{"size":225,"mtime":1609753583422,"results":"22","hashOfConfig":"14"},{"size":1517,"mtime":1609989081478,"results":"23","hashOfConfig":"14"},{"size":50,"mtime":1609838661351,"results":"24","hashOfConfig":"14"},{"size":2951,"mtime":1609835116752,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rex34z",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\02.项目文档\\ReactTest\\danfoss\\src\\reportWebVitals.ts",[],["55","56"],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\layouts\\LeftNavigation.tsx",["57"],"import React from 'react';\r\nimport {Layout,Button} from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionType from \"../redux/actionType\";\r\nimport { ReducerType } from \"../redux/rootReducer\";\r\n\r\n\r\n\r\nclass LeftNavigation extends React.Component<any,any>{\r\n\r\n    constructor(props:any){\r\n        super(props)\r\n        window.console.log(this.props.value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Button type = \"default\" >按钮</Button>\r\n                <Button type = \"default\" onClick = {this.props.updataName} >1{this.props.value}</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:ReducerType) => {\r\n    return{\r\n        value: state.userReducer.userInfo.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any,ownProps:any) =>{\r\n    return{\r\n        updataName: () => dispatch({\r\n            type: ActionType.USERINFO_UPDATE\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LeftNavigation);\r\n",["58","59"],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\rootReducer.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\userReducer.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\index.tsx",["60","61"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button} from 'antd';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport {store} from \"./redux/store\";\nimport App from './layouts/LeftNavigation';\nimport Login from \"./containers/Login/Login\";\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport Mock from \"mockjs\";//使用接口时需要注释此引用\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <App />\n        <Login/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\actionType.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\reducers\\loginReducer.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\components\\Login\\Login.tsx",["62","63"],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\redux\\store.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\containers\\Login\\Login.tsx",["64"],"import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../../components/Login/Login\";\r\nimport * as ActionType from \"../../redux/actionType\";\r\nimport { ReducerType } from \"../../redux/rootReducer\";\r\nimport Axios from 'axios';\r\nimport { host } from \"../../config\";\r\nimport \"../../utils/mock/Index\";\r\n\r\nconst mapDispatchToProps = (dispatch:any) =>{\r\n    return{\r\n        updataPassWord:(e:string) => dispatch({\r\n            type:ActionType.LOGIN_ADD,\r\n            num:e,\r\n        }),\r\n        updataUserName:(e:string) => dispatch({\r\n            type:ActionType.LOGIN_UPDATE,\r\n            num:e,\r\n        }),\r\n        loginSubmit: async (userName:string,passWord:string) =>{\r\n            var ref = await Axios.post(`${host}/login/login`,{\r\n                userName,\r\n                passWord,\r\n            })\r\n            dispatch({\r\n                type: ActionType.LOGIN_SET_USERPASS\r\n            })\r\n            if(ref.status === 200){\r\n                \r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:ReducerType) => {\r\n    return{\r\n        loginName: state.loginReducer.loginInfo.loginUserName,\r\n        loginPass: state.loginReducer.loginInfo.loginPassWord,\r\n    }\r\n}\r\n\r\nexport interface ILogin{\r\n    loginName:string;\r\n    loginPass: string;\r\n    updataPassWord: (e:string) => void;\r\n    updataUserName: (e:string) => void;\r\n    loginSubmit: (userName:string,passWord:string) => void;\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","D:\\02.项目文档\\ReactTest\\danfoss\\src\\config.tsx",[],"D:\\02.项目文档\\ReactTest\\danfoss\\src\\utils\\mock\\Index.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"69","severity":1,"message":"75","line":3,"column":9,"nodeType":"71","messageId":"72","endLine":3,"endColumn":15},{"ruleId":"69","severity":1,"message":"76","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":73,"column":21,"nodeType":"79","endLine":73,"endColumn":62},{"ruleId":"77","severity":1,"message":"78","line":82,"column":24,"nodeType":"79","endLine":82,"endColumn":35},{"ruleId":"69","severity":1,"message":"80","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar",["81"],["82"],"'Button' is defined but never used.","'Mock' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]